{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/statistics.js","components/FeedbackOptions/constans.js","components/App.js","index.js"],"names":["Section","title","children","FeedbackButton","feedback","onLeaveFeedback","type","data-feedback","onClick","FeedbackOptions","options","map","option","Notification","message","Statistics","good","bad","neutral","total","positivePercantage","FEEDBACK_OPTIONS","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositivePercantage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAmBeA,EAhBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,6BAAKD,IACJC,MCJPC,EAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAChC,OACI,wBAAQC,KAAK,SAASC,gBAAeH,EAAUI,QAASH,EAAxD,SACKD,KAeEK,EAVS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAChC,OAAOK,EAAQC,KAAI,SAACC,GAAD,OAAY,cAAC,EAAD,CAAgBR,SAAUQ,EAAQP,gBAAiBA,QCFvEQ,EAPM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC0B3BC,EAzBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qCACKD,EAAQ,GACL,+BACI,wCAAWH,KACX,2CAAcE,KACd,uCAAUD,KACV,yCAAYE,KACZ,uDAA0BC,QAGvB,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BChBrCO,G,MAAmB,CAAC,OAAQ,UAAU,QCsDpCC,E,4MA7CXC,MAAQ,CACJP,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGTO,eAAiB,YAAiB,IACtBpB,EADqB,EAAbqB,OACYC,QAApBtB,SACR,EAAKuB,UAAS,SAAAC,GAAS,sBAAQxB,EAAWwB,EAAUxB,GAAY,O,EAIpEyB,mBAAqB,WACjB,MAA+B,EAAKN,MACpC,OADA,EAAQP,KAAR,EAAcE,QAAd,EAAuBD,K,EAG3Ba,wBAA0B,WACtB,IAAQd,EAAS,EAAKO,MAAdP,KACFG,EAAQ,EAAKU,qBACnB,OAAOV,EAAQY,KAAKC,MAAOhB,EAAKG,EAAS,KAAO,G,4CAGpD,WACI,MAA+Bc,KAAKV,MAA5BP,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,IACjBE,EAAQc,KAAKJ,qBACbT,EAAqBa,KAAKH,0BAChC,OACI,gCACA,cAAC,EAAD,CAAS7B,MAAM,wBAAf,SACI,cAAC,EAAD,CAAiBS,QAASW,EAAkBhB,gBAAkB4B,KAAKT,mBAEvE,cAAC,EAAD,CAASvB,MAAM,aAAf,SACI,cAAC,EAAD,CACIe,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOA,EACPC,mBAAoBA,a,GAtCtBc,aCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.11b63f1f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n    \r\n      \r\n    \r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.object.isRequired,\r\n}\r\nexport default Section","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n    return (\r\n        <button type='button' data-feedback={feedback} onClick={onLeaveFeedback}>\r\n            {feedback}\r\n        </button>\r\n    )\r\n}\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return options.map((option) => <FeedbackButton feedback={option} onLeaveFeedback={onLeaveFeedback} />)\r\n    \r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string),\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>\r\n\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\n\r\nconst Statistics = ({ good, bad, neutral, total, positivePercantage }) => {\r\n    return (\r\n        <>\r\n            {total > 0 && (\r\n                <ul>\r\n                    <li>Good: {good}</li>\r\n                    <li>Neutral: {neutral}</li>\r\n                    <li>Bad: {bad}</li>\r\n                    <li>Total: {total}</li>\r\n                    <li>Positive Percentage: {positivePercantage}</li>\r\n                </ul>\r\n            )}\r\n            {total === 0 && <Notification message='No Feedback given'/>}\r\n        </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercantage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics","export const FEEDBACK_OPTIONS = ['good', 'neutral','bad']","import React, { Component } from 'react';\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport styles from './App.module.css'\n// import Notification from './Notification/Notification';\nimport { FEEDBACK_OPTIONS } from './FeedbackOptions/constans';\n\nclass App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    };\n\n    handleFeedback = ({ target }) => {\n        const { feedback } = target.dataset\n        this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }))\n        \n    }\n\n    countTotalFeedback = () => {\n        const { good, neutral, bad } = this.state\n        return good + neutral + bad\n    }\n    countPositivePercantage = () => {\n        const { good } = this.state;\n        const total = this.countTotalFeedback()\n        return total ? Math.round((good/total) * 100) : 0\n    }\n\n    render() {\n        const { good, neutral, bad } = this.state\n        const total = this.countTotalFeedback()\n        const positivePercantage = this.countPositivePercantage()\n        return (\n            <div>\n            <Section title='Please leave feedback'>\n                <FeedbackOptions options={FEEDBACK_OPTIONS} onLeaveFeedback={ this.handleFeedback}/>   \n            </Section>\n            <Section title='Statistics'>\n                <Statistics\n                    good={good}\n                    neutral={neutral}\n                    bad={bad}\n                    total={total}\n                    positivePercantage={positivePercantage}\n                />\n            </Section>\n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}